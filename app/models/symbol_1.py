from sqlalchemy import Column, String, Date, Float, Integer, Boolean, DateTime, UniqueConstraint
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()

class Symbol(Base):
    __tablename__ = "symbols"
    __table_args__ = {'schema': 'tradingdb'}

    instrument_key = Column(String(255), primary_key=True, name='instrument_key')
    Exchange = Column(String(50), name='Exchange')
    Stock_Code = Column(String(50), name='Stock_Code')
    Product_Type = Column(String(50), name='Product_Type')
    Expiry_Date = Column(Date, name='Expiry_Date')
    Option_Type = Column(String(50), name='Option_Type')
    Strike_Price = Column(Float, name='Strike_Price')
    Stock_Token = Column(String(255), name='Stock_Token')
    Instrument_Name = Column(String(255), name='Instrument_Name')
    Series = Column(String(50), name='Series')
    Ca_Level = Column(String(50), name='Ca_Level')
    Permitted_To_Trade = Column(Boolean, name='Permitted_To_Trade')
    Issue_Capital = Column(Float, name='Issue_Capital')
    Warning_Qty = Column(Integer, name='Warning_Qty')
    Freeze_Qty = Column(Integer, name='Freeze_Qty')
    Credit_Rating = Column(String(50), name='Credit_Rating')
    Normal_Market_Status = Column(String(50), name='Normal_Market_Status')
    Odd_Lot_Market_Status = Column(String(50), name='Odd_Lot_Market_Status')
    Spot_Market_Status = Column(String(50), name='Spot_Market_Status')
    Auction_Market_Status = Column(String(50), name='Auction_Market_Status')
    Normal_Market_Eligibility = Column(String(50), name='Normal_Market_Eligibility')
    Odd_Lot_Market_Eligibility = Column(String(50), name='Odd_Lot_Market_Eligibility')
    Spot_Market_Eligibility = Column(String(50), name='Spot_Market_Eligibility')
    Auction_Market_Eligibility = Column(String(50), name='Auction_Market_Eligibility')
    Scrip_Id = Column(String(50), name='Scrip_Id')
    Issue_Rate = Column(Float, name='Issue_Rate')
    Issue_Start_Date = Column(Date, name='Issue_Start_Date')
    Interest_Payment_Date = Column(Date, name='Interest_Payment_Date')
    Issue_Maturity_Date = Column(Date, name='Issue_Maturity_Date')
    Margin_Percentage = Column(Float, name='Margin_Percentage')
    Minimum_Lot_Qty = Column(Integer, name='Minimum_Lot_Qty')
    Lot_Size = Column(Integer, name='Lot_Size')
    Tick_Size = Column(Float, name='Tick_Size')
    Company_Name = Column(String(255), name='Company_Name')
    Listing_Date = Column(Date, name='Listing_Date')
    Expulsion_Date = Column(Date, name='Expulsion_Date')
    Readmission_Date = Column(Date, name='Readmission_Date')
    Record_Date = Column(Date, name='Record_Date')
    Low_Price_Range = Column(Float, name='Low_Price_Range')
    High_Price_Range = Column(Float, name='High_Price_Range')
    Security_Expiry_Date = Column(Date, name='Security_Expiry_Date')
    No_Delivery_Start_Date = Column(Date, name='No_Delivery_Start_Date')
    No_Delivery_End_Date = Column(Date, name='No_Delivery_End_Date')
    Mf = Column(String(50), name='Mf')
    Aon = Column(String(50), name='Aon')
    Participant_In_Market_Index = Column(String(50), name='Participant_In_Market_Index')
    Book_Cls_Start_Date = Column(Date, name='Book_Cls_Start_Date')
    Book_Cls_End_Date = Column(Date, name='Book_Cls_End_Date')
    Exercise_Start_Date = Column(Date, name='Exercise_Start_Date')
    Exercise_End_Date = Column(Date, name='Exercise_End_Date')
    Old_Token = Column(String(255), name='Old_Token')
    Asset_Instrument = Column(String(255), name='Asset_Instrument')
    Asset_Name = Column(String(255), name='Asset_Name')
    Asset_Token = Column(Integer, name='Asset_Token')
    Intrinsic_Value = Column(Float, name='Intrinsic_Value')
    Extrinsic_Value = Column(Float, name='Extrinsic_Value')
    Excercise_Style = Column(String(50), name='Excercise_Style')
    Egm = Column(String(50), name='Egm')
    Agm = Column(String(50), name='Agm')
    Interest = Column(String(50), name='Interest')
    Bonus = Column(String(50), name='Bonus')
    Rights = Column(String(50), name='Rights')
    Dividends = Column(String(50), name='Dividends')
    Ex_Allowed = Column(String(50), name='Ex_Allowed')
    Ex_Rejection_Allowed = Column(Boolean, name='Ex_Rejection_Allowed')
    Pl_Allowed = Column(Boolean, name='Pl_Allowed')
    Is_This_Asset = Column(Boolean, name='Is_This_Asset')
    Board_Lot_Qty= Column(Integer, name='Board_Lot_Qty')
    Date_Of_Delisting= Column(Date, name='Date_Of_Delisting')
    Date_Of_Listing= Column(Date, name='Date_Of_Listing')
    Face_Value = Column(Float, name='Face_Value')
    Freeze_Percent = Column(Float, name='Freeze_Percent')
    High_Date= Column(Date, name='High_Date')
    ISIN_Code= Column(String(50), name='ISIN_Code')
    Instrument_Type= Column(String(50), name='Instrument_Type')
    Issue_Price = Column(Float, name='Issue_Price')
    Life_Time_High = Column(Float, name='Life_Time_High')
    Life_Time_Low = Column(Float, name='Life_Time_Low')
    Low_Date= Column(Date, name='Low_Date')
    AVM_Buy_Margin= Column(Float, name='AVM_Buy_Margin')
    AVM_Sell_Margin = Column(Float, name='AVM_Sell_Margin')
    BCast_Flag= Column(Boolean, name='BCast_Flag')
    Group_Name = Column(String(50), name='Group_Name')
    Market_Lot= Column(Integer, name='Market_Lot')
    NDE_Date= Column(Date, name='NDE_Date')
    NDS_Date= Column(Date, name='NDS_Date')
    Nd_Flag= Column(Boolean, name='Nd_Flag')
    Scrip_Code = Column(String(255), name='Scrip_Code')
    Scrip_Name = Column(String(255), name='Scrip_Name')
    Susp_Status = Column(String(255), name='Susp_Status')
    Suspension_Reason = Column(String(255), name='Suspension_Reason')
    Suspension_Date= Column(Date, name='Suspension_Date')
    Is_Corp_Adjusted = Column(Boolean, name='Is_Corp_Adjusted')
    Local_Update_Datetime = Column(DateTime, name='Local_Update_Datetime')
    Delete_Flag = Column(Boolean, name='Delete_Flag')
    Remarks = Column(String(255), name='Remarks')
    Base_Price = Column(Float, name='Base_Price')
    Exchange_Code = Column(String(50), name='Exchange_Code')
    Product_Type = Column(String(50), name='Product_Type')
    Refresh_Flag = Column(Boolean, name='Refresh_Flag')
    Breeze_Token = Column(String(255), name='Breeze_Token')
    Kite_Token = Column(String(255), name='Kite_Token')
    first_added_datetime= Column(Date, name='first_added_datetime')
    __table_args__ = (UniqueConstraint('instrument_key'),)